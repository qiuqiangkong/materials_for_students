一些做研究的Tips

如何看论文
- 多看电子版书籍和论文。电子化能让资料整理更有效率。
- 使用文献管理软件管理文献。如Zotero等。
- 管理文献时，用一两句话概括总结每篇文章。
- 看文章时，先快速浏览全文，先看懂图和公式。最后回头细看。
- 粗看论文时，通常5-20分钟就能看一篇。精读论文时，需要更长时间。
- 粗看论文可以不求甚解，可以只看懂50%。多粗读几篇文章，即可建立起对该领域的认识。
- 用文档记录阅读笔记、常用代码，方便查询使用。

学术研究
- 多看论文 + 多动手 + 多写作。
- 要具备优秀的做、写、说的能力。
- 注重代码质量、可复现性。多阅读别人的优秀代码。
- 可以多个想法同时进行，常常会有互补。
- 鼓励和他人分享idea，可以督促自己尽快迅速实现。
- 多与他人讨论，避免思路陷入牛角尖。
- 做过的每个工作都留下脚印，如写论文、开源等。
- 做开源、开放的研究。
- 做自己喜欢的课题，喜欢的研究。
- 每个人研究方向不同、难度不同。并没有比较的价值。
- 为他人批评自己感到高兴，收获批评能够快速成长。
- 研究能力的培养来自和导师交流、同学交流、外部合作者交流、开会交流和刷twitter/arxiv等。来自和导师的交流只占一部分。
- 创新是科研的工作核心。发表论文是因为这种创新对别人有启发，值得分享交流。如果单纯为了发paper，容易本末倒置。
- 学生和导师是平等的，而非上下级关系。导师和学生间是平等的交流，在学术上更多是讨论，而非指导。导师会为学生的主见感到高兴。
- 采用番茄工作法，高效工作。

论文写作
- 使用在线latex编辑软件写论文，如Overleaf等。
- 论文的图、表应专业、美观。
- 使用grammaly.com或ChatGPT等软件检查语法。
- ddl前早写论文，至少需要粗改一遍 + 精改一遍。
- 每篇论文应有开源代码 + 好看的demo + 好的写作。
- 论文数量并不重要。每篇文章都应有趣、高可复用、对别人有启发性。每一项工作的目标应该都是definite accept。
- 不要怕被拒稿，论文是否被接收有随机性。论文总是越改越好，最终总是有处可去。
- 修改论文时，导师提出的只是建议，需要按照自己的思考决定是否采纳。
- 合作时，一作通常时项目的lead、主要贡献者及执笔者。
- 他人lead的项目，合作时应由他人提出co-author的邀请。
- 同等贡献时，可以主动将自己放在共一之后。对未来合作很有帮助。
- 鼓励与外部单位、合作者合作论文。
- 与外部合作无需告知导师。如果导师没有贡献不需要挂名。独立成长最重要。


代码撰写
- 开一个GitHub账户，尝试为每篇工作开源。
- 遵循每种语言的代码规范。例如Python规范：https://www.python.org/dev/peps/pep-0008/
- 站在使用者的角度写代码。
- 在大部分项目中，使用全英文注释。

学术视野
- 多去开会，无论有无论文都去。学生会议注册费通常很便宜。会议是最高效的了解学科研究方向的途径。
- 多参加不同领域的会议、活动。多与参会者交流，提升眼界。
- 多认识学术界、工业界的人。对未来找学术界、工业界的工作有益。
- 注册twitter，关注@_akhaliq等大V。关注机器之心、量子位等公众号，时常关注最前沿研究。
- 关注Google groups，如Machine listening, Auditory, DCASE，经常能发现实习和交流的机会。
- 多看CV、NLP及各个领域的文章。CV的研究常常领先Audio一到两年。
- 对广泛的科学方向保持兴趣。成为专才的同时也成为通才。

工作实习
- 鼓励与研究相关的实习。鼓励去不同的公司去实习。尽可能去海外实习。最好每年有三个月在校外实习或交换。
- 在外实习不需要老师批准。但一定要去对自己成长有帮助的单位实习。
- 鼓励创业。在校期间敢想敢做，失败了没有损失。

研究避坑
- 不要伪造数据，不要抄袭论文。

工作和生活
- 不打卡，不查岗，可以远程办公。研究时间可以自行安排。
- 最好的idea常常是在路上、吃饭时、交流中出现的。不需要天天坐在办公室里。
- 多倾听他人的建议，但要有自己的判断。
- 要有自己的生活，爱好，时间。多加强体育锻炼。
- 好资源多与他人分享。分享的越多，得到的越多。
- 在帮助他人中获得快乐。

期待大家能够提升自己的上限。能做出改变世界的研究。